{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.4bd78484eaa740b59b2d.hot-update.js","sources":["webpack:///./components/search/searchForm.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchIcons, setSearchTerm, changeSideIcon, setSelectedIcon } from \"../../actions/iconActions\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { BREAKPOINT_LG,SEARCH_RADIUS,TRANSITION,LIGHT_BACKGROUND,BUTTON_RADIUS,DARK_BORDER_COLOR,MAX_WIDTH,FONT_COLOR, BREAKPOINT_MD, BREAKPOINT_SM, SEARCH_BACKGROUND, BLUE_COLOR} from '../types';\r\nimport styled from 'styled-components';\r\nconst StyledSearch = styled.div`\r\n    .search-cont {\r\n  \r\n    transition:${TRANSITION}; \r\n    border:1px solid transparent;\r\n      margin:0 auto;\r\n      box-shadow: 0px 3px 6px 0px rgba(0, 0, 0, 0.1), 0px 1px 7px 0px rgba(0, 0, 0, 0.08);\r\n      &.active{\r\n        background:#fff;\r\n       \r\n         .search-box {\r\n\r\n         \r\n        \r\n      }\r\n      }\r\n      &.fixed {\r\n        position: fixed;\r\n        top: 70px;\r\n        left: 0px;\r\n        padding: 5px;\r\n        z-index: 11;\r\n        border-radius: 0;\r\n        right: 0;\r\n        max-width: none;\r\n        background: #fff;\r\n        border: 0px;\r\n        border-top: 1px solid #dee3eb;\r\n        border-bottom: 1px solid #dee3eb;\r\n        .search-box {\r\n          max-width: ${MAX_WIDTH};\r\n          border-bottom: 0px solid #ddd;\r\n          \r\n        }\r\n      }\r\n     \r\n \r\n    \r\n      &.active {\r\n        \r\n      }\r\n      .search-box input::-ms-clear {\r\n            display: none;\r\n        }\r\n        @media screen and (max-width: ${BREAKPOINT_LG}) {\r\n            margin: 0px 0px;\r\n            margin-bottom: 0px;\r\n            max-width: none;\r\n            &.fixed {\r\n                margin: 0px;\r\n              }\r\n        }\r\n        .search-box{\r\n            \r\n              position: relative;\r\n              border-radius: ${BUTTON_RADIUS};\r\n              display: flex;\r\n              width: 100%;\r\n            .close {\r\n              order: 1;\r\n              align-self: center;\r\n              padding: 0px 15px;\r\n              height: 32px;\r\n              cursor: pointer;\r\n            }\r\n            input {\r\n              height: 40px;\r\n              margin-left: 60px;\r\n              box-shadow: none;\r\n              outline: none;\r\n              font-weight: 400;\r\n              order: 1;\r\n              color: #000;\r\n              font-size: 19px;\r\n              width: 100%;\r\n              margin: 0;\r\n              padding: 0;\r\n              border-radius: 2px;\r\n              border: 0;\r\n              display: block;\r\n              background: transparent;\r\n              margin-left: 10px;\r\n              @media screen and (max-width: ${BREAKPOINT_MD}) {\r\n                height: 40px;\r\n                  font-size: 18px;\r\n              }\r\n            }\r\n            i {\r\n                @media screen and (max-width: ${BREAKPOINT_MD}) {\r\n                    font-size: 27px;\r\n                  height: 27px;\r\n                }\r\n              order: 1;\r\n              align-self: center;\r\n              padding: 0px 5px;\r\n              height: 27px;\r\n              font-size: 27px;\r\n              color: #999;\r\n              cursor: pointer;\r\n              &.bx-x {\r\n                font-size: 24px;\r\n                padding: 5px;\r\n              \r\n                height: 24px;\r\n                line-height: 24px ;\r\n                color: #9ca5ad;\r\n \r\n                border-radius: 50%;\r\n                cursor: pointer;\r\n               &:hover{\r\n                background: rgba(0,0,0,0.075);\r\n               }\r\n              }\r\n        }}\r\n      z-index: 23;\r\n      margin-bottom: 25px;\r\n      position: relative;\r\n      display: block;\r\n      padding:6px 15px;\r\n      margin: 0 auto; \r\n     \r\n    border-radius: ${SEARCH_RADIUS};\r\n    \r\n    }\r\n`;\r\nclass SearchForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            search: \"\",\r\n            isFocused: false,\r\n            resultVisible: false,\r\n            lastScrollPos: 0,\r\n            searchClass:'search-cont',\r\n            style:'ALL',\r\n            category:{id:null,name:null}\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.emptySearch = this.emptySearch.bind(this);\r\nthis.onSearchFocus = this.onSearchFocus.bind(this);\r\nthis.onSearchBlur = this.onSearchBlur.bind(this);\r\n        this.handleSearchScroll = this.handleSearchScroll.bind(this);\r\n    }\r\n\r\n    emptySearch() {\r\n      this.setState({searchClass:'search-cont'});\r\n        this.setState({\r\n            search: \"\"\r\n        });\r\n        setTimeout(function() {\r\n          if(this.state.category!=null){\r\n            this.props.setSearchTerm(\"\",this.state.style,this.state.category.id);}\r\n            else{\r\n              this.props.setSearchTerm(\"\",this.state.style,null);\r\n            }\r\n        }.bind(this),\r\n            100\r\n        );\r\n    }\r\n    onChange(e) {\r\n        this.setState({\r\n            search: e.target.value\r\n        });\r\n       \r\n        \r\n        setTimeout(function() {\r\n            if(this.state.category!=null){\r\n              this.props.setSearchTerm(this.state.search,this.state.style,this.state.category.id);\r\n            }\r\n              else{\r\n                this.props.setSearchTerm(this.state.search,this.state.style,null);\r\n           \r\n              }\r\n            \r\n        }.bind(this),\r\n            100\r\n        );\r\n    }\r\n    onSearchFocus(){\r\n        this.setState({searchClass:'search-cont active'});\r\n    }\r\n     onSearchBlur(){\r\n       \r\n        this.setState({searchClass:'search-cont'});\r\n    }\r\n    handleSearchScroll() {\r\n        var header = document.querySelector(\".navbar-cont  .search-sticky\");\r\n        var navbar = document.querySelector(\".navbar-cont\");\r\n        var sticky = document.querySelector(\".home-top .search-sticky\");\r\n        var focusEl = document.querySelector(\".navbar-cont  .search-box input\");\r\n        var searchEl = document.querySelector(\".home-top .search-box input\");\r\n        var isFocused = (document.activeElement === focusEl);  \r\n        var isMainFocused = (document.activeElement === searchEl);    \r\n        var fixed_class = \"nav-active\";\r\n        if(sticky!==null){\r\n        var rect = sticky.getBoundingClientRect();\r\n\r\n        if (rect.top < 0) {\r\n        navbar.classList.add(fixed_class);\r\n            header.classList.add(fixed_class);\r\n             if(isMainFocused){focusEl.focus();};\r\n        } else {\r\n             if(isFocused){searchEl.focus();};\r\n            header.classList.remove(fixed_class);\r\n            navbar.classList.remove(fixed_class);\r\n        }}\r\n    }\r\n    \r\n    componentWillReceiveProps(newProps){\r\n        this.setState({search:newProps.search,category:newProps.category});\r\n        this.setState({style:newProps.style});\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"scroll\", this.handleSearchScroll);\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"scroll\", this.handleSearchScroll);\r\n    }\r\n    render() {\r\n        return (\r\n            <StyledSearch className=\"search-sticky animated fadeIn\">\r\n        <div className={this.state.searchClass} onFocus={this.onSearchFocus} onBlur={this.onSearchBlur}>\r\n         \r\n            <div className=\"search-box\" ref=\"searchBox\">\r\n            <i className=\"bx bx-search\"></i>\r\n              <input\r\n            onChange={this.onChange}\r\n            value={this.state.search}\r\n            autoComplete=\"off\"\r\n            placeholder= \"Search icons...\"\r\n            />\r\n              {this.state.search.length > 0 &&\r\n                <i className=\"bx bx-x\" onClick={this.emptySearch}></i>\r\n                 }\r\n            </div>\r\n         \r\n        </div>\r\n      </StyledSearch>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    search: state.search,\r\n    category: state.category,\r\n    style: state.style\r\n  };\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n    return bindActionCreators(\r\n        {\r\n            fetchIcons,\r\n            setSearchTerm,\r\n            changeSideIcon, \r\n            setSelectedIcon,\r\n        },\r\n        dispatch\r\n    );\r\n}\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SearchForm);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AA4HA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAPA;AAUA;AACA;AACA;AACA;AACA;AAjBA;AAkBA;AACA;;;AACA;AACA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAGA;;;AACA;AACA;AACA;AADA;AAKA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAGA;;;AACA;AACA;AAAA;AAAA;AACA;;;AACA;AAEA;AAAA;AAAA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AACA;AAAA;AAAA;AACA;AADA;AACA;AACA;AACA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;;;AAEA;AACA;AACA;;;AACA;AACA;AACA;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;AAtHA;AACA;AAwHA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAQA;AACA;AAAA;;;;A","sourceRoot":""}